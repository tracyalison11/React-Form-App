{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nconst initialInputState = {\n  value: '',\n  isTouched: false\n};\n\nconst inputStateReducer = (state, action) => {\n  return {\n    value: '',\n    isTouched: false\n  };\n};\n\nconst useInput = validateValue => {\n  _s();\n\n  useReducer(inputStateReducer, initialInputState);\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isTouched, setIsTouched] = useState(false);\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n\n  const valueBlurHandler = event => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredValue('');\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    valueBlurHandler,\n    reset\n  };\n};\n\n_s(useInput, \"YVEHFegiw0yOrFAxv4G2jyYO0Oo=\");\n\nexport default useInput;","map":{"version":3,"sources":["/Users/tracyking/Desktop/React Apps/react-form-project/src/hooks/use-input.js"],"names":["useReducer","initialInputState","value","isTouched","inputStateReducer","state","action","useInput","validateValue","enteredValue","setEnteredValue","useState","setIsTouched","valueIsValid","hasError","valueChangeHandler","event","target","valueBlurHandler","reset","isValid"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,KAAK,EAAE,EADiB;AAExBC,EAAAA,SAAS,EAAE;AAFa,CAA1B;;AAIA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3C,SAAO;AACLJ,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,SAAS,EAAE;AAFN,GAAP;AAID,CALD;;AAOA,MAAMI,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AAClCR,EAAAA,UAAU,CAACI,iBAAD,EAAoBH,iBAApB,CAAV;AAEA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCC,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACR,SAAD,EAAYS,YAAZ,IAA4BD,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAME,YAAY,GAAGL,aAAa,CAACC,YAAD,CAAlC;AACA,QAAMK,QAAQ,GAAG,CAACD,YAAD,IAAiBV,SAAlC;;AAEA,QAAMY,kBAAkB,GAAIC,KAAD,IAAW;AACpCN,IAAAA,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaf,KAAd,CAAf;AACD,GAFD;;AAIA,QAAMgB,gBAAgB,GAAIF,KAAD,IAAW;AAClCJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,QAAMO,KAAK,GAAG,MAAM;AAClBT,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD;;AAKA,SAAO;AACLV,IAAAA,KAAK,EAAEO,YADF;AAELW,IAAAA,OAAO,EAAEP,YAFJ;AAGLC,IAAAA,QAHK;AAILC,IAAAA,kBAJK;AAKLG,IAAAA,gBALK;AAMLC,IAAAA;AANK,GAAP;AAQD,CA9BD;;GAAMZ,Q;;AAgCN,eAAeA,QAAf","sourcesContent":["import { useReducer } from 'react';\n\nconst initialInputState = {\n  value: '',\n  isTouched: false,\n};\nconst inputStateReducer = (state, action) => {\n  return {\n    value: '',\n    isTouched: false,\n  };\n};\n\nconst useInput = (validateValue) => {\n  useReducer(inputStateReducer, initialInputState)\n\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isTouched, setIsTouched] = useState(false);\n\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = (event) => {\n    setEnteredValue(event.target.value);\n  };\n\n  const valueBlurHandler = (event) => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredValue('');\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    valueBlurHandler,\n    reset\n  }\n};\n\nexport default useInput;\n"]},"metadata":{},"sourceType":"module"}