{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nconst initialInputState = {\n  value: '',\n  isTouched: false\n};\n\nconst inputStateReducer = (state, action) => {\n  return {\n    value: '',\n    isTouched: false\n  };\n};\n\nconst useInput = validateValue => {\n  _s();\n\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState);\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n\n  const valueBlurHandler = event => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredValue('');\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    valueBlurHandler,\n    reset\n  };\n};\n\n_s(useInput, \"gvJkPEQ6Ju5turm8Oo71bK8W7Zk=\");\n\nexport default useInput;","map":{"version":3,"sources":["/Users/tracyking/Desktop/React Apps/react-form-project/src/hooks/use-input.js"],"names":["useReducer","initialInputState","value","isTouched","inputStateReducer","state","action","useInput","validateValue","inputState","dispatch","valueIsValid","enteredValue","hasError","valueChangeHandler","event","setEnteredValue","target","valueBlurHandler","setIsTouched","reset","isValid"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,KAAK,EAAE,EADiB;AAExBC,EAAAA,SAAS,EAAE;AAFa,CAA1B;;AAIA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3C,SAAO;AACLJ,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,SAAS,EAAE;AAFN,GAAP;AAID,CALD;;AAOA,MAAMI,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AAClC,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBV,UAAU,CAACI,iBAAD,EAAoBH,iBAApB,CAAzC;AAEA,QAAMU,YAAY,GAAGH,aAAa,CAACI,YAAD,CAAlC;AACA,QAAMC,QAAQ,GAAG,CAACF,YAAD,IAAiBR,SAAlC;;AAEA,QAAMW,kBAAkB,GAAIC,KAAD,IAAW;AACpCC,IAAAA,eAAe,CAACD,KAAK,CAACE,MAAN,CAAaf,KAAd,CAAf;AACD,GAFD;;AAIA,QAAMgB,gBAAgB,GAAIH,KAAD,IAAW;AAClCI,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,QAAMC,KAAK,GAAG,MAAM;AAClBJ,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAG,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD;;AAKA,SAAO;AACLjB,IAAAA,KAAK,EAAEU,YADF;AAELS,IAAAA,OAAO,EAAEV,YAFJ;AAGLE,IAAAA,QAHK;AAILC,IAAAA,kBAJK;AAKLI,IAAAA,gBALK;AAMLE,IAAAA;AANK,GAAP;AAQD,CA3BD;;GAAMb,Q;;AA6BN,eAAeA,QAAf","sourcesContent":["import { useReducer } from 'react';\n\nconst initialInputState = {\n  value: '',\n  isTouched: false,\n};\nconst inputStateReducer = (state, action) => {\n  return {\n    value: '',\n    isTouched: false,\n  };\n};\n\nconst useInput = (validateValue) => {\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputState);\n\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = (event) => {\n    setEnteredValue(event.target.value);\n  };\n\n  const valueBlurHandler = (event) => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredValue('');\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    valueBlurHandler,\n    reset\n  }\n};\n\nexport default useInput;\n"]},"metadata":{},"sourceType":"module"}