{"ast":null,"code":"var _jsxFileName = \"/Users/tracyking/Desktop/React Apps/react-form-project/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmailIsTouched, setEnteredEmailIsTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  const emailValidationHandler = event => {\n    const emailFormatRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (event.target.value.match(emailFormatRegex)) {\n      console.log('email is valid');\n      setEnteredEmail(event.target.value);\n      setEnteredEmailIsValid(true);\n    }\n  };\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    setEnteredName('');\n    setEnteredNameTouched(true);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onBlur: nameInputBlurHandler,\n        onChange: nameInputChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailValidationHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), enteredEmailIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email must be valid.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"BDGaUSgUyl8PyWLcg9yWB4mFsCo=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/Users/tracyking/Desktop/React Apps/react-form-project/src/components/SimpleInput.js"],"names":["useState","SimpleInput","props","enteredName","setEnteredName","enteredEmail","setEnteredEmail","enteredNameTouched","setEnteredNameTouched","enteredEmailIsTouched","setEnteredEmailIsTouched","enteredNameIsValid","trim","nameInputIsInvalid","emailValidationHandler","event","emailFormatRegex","target","value","match","console","log","setEnteredEmailIsValid","formIsValid","nameInputChangeHandler","emailInputChangeHandler","nameInputBlurHandler","emailInputBlurHandler","setEnteredEmailTouched","formSubmissionHandler","preventDefault","nameInputClasses","enteredEmailIsValid"],"mappings":"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","sourcesContent":["import { useState } from 'react';\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n    const [enteredEmailIsTouched, setEnteredEmailIsTouched] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  const emailValidationHandler = event => {\n    const emailFormatRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (event.target.value.match(emailFormatRegex)) {\n      console.log('email is valid');\n      setEnteredEmail(event.target.value);\n      setEnteredEmailIsValid(true);\n    }\n  }\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    setEnteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n\n    setEnteredName('');\n    setEnteredNameTouched(true);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          type='text'\n          id='name'\n          onBlur={nameInputBlurHandler}\n          onChange={nameInputChangeHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && <p className=\"error-text\">Name must not be empty.</p>}\n      </div>\n      <div className={nameInputClasses}>\n        <label htmlFor='email'>Email Address</label>\n        <input\n          type='email'\n          id='email'\n          onChange={emailValidationHandler}\n          value={enteredEmail}\n        />\n        {enteredEmailIsValid && <p className=\"error-text\">Email must be valid.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}